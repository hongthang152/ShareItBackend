steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_PROJECT_NAME}:$SHORT_SHA',
    '--build-arg', 'AZURE_STORAGE_ACCESS_KEY=$_AZURE_STORAGE_ACCESS_KEY',
    '--build-arg', 'AZURE_STORAGE_ACCOUNT=$_AZURE_STORAGE_ACCOUNT',
    '--build-arg', 'CONTAINER_NAME=$_CONTAINER_NAME',
    '--build-arg', 'FRONTEND_URL=$_FRONTEND_URL',
    '--build-arg', 'MONGO_URL=$_MONGO_URL',
    '.']
  id: 'Building Docker image'
  
- name: 'gcr.io/cloud-builders/docker'
  args: ['push','gcr.io/${PROJECT_ID}/${_PROJECT_NAME}:${SHORT_SHA}']
  id: 'Pushing Docker image'

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['projects','add-iam-policy-binding','$PROJECT',
    '--member=serviceAccount:$PROJECT@cloudbuild.gserviceaccount.com',
    '--role=roles/container.developer']
  id: 'Setting up Google Cloud Credentials'
  env:
  - 'PROJECT="$(gcloud projects describe $(gcloud config get-value core/project -q) --format='get(projectNumber)')"'

- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply','-f','k8s/']
  id: 'Setting up Google Cloud Kubernetes Deployment'
  env:
  - 'CLOUDSDK_COMPUTE_REGION=$_CLOUDSDK_COMPUTE_REGION'
  - 'CLOUDSDK_COMPUTE_ZONE=$_CLOUDSDK_COMPUTE_ZONE'
  - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLOUDSDK_CONTAINER_CLUSTER'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - set
  - image
  - deployment 
  - ${_PROJECT_NAME}
  - gcr.io/${PROJECT_ID}/${_PROJECT_NAME}:${SHORT_SHA}
  id: 'Deploying to Kubernetes'
  env:
    - 'CLOUDSDK_COMPUTE_REGION=$_CLOUDSDK_COMPUTE_REGION'
    - 'CLOUDSDK_COMPUTE_ZONE=$_CLOUDSDK_COMPUTE_ZONE'
    - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLOUDSDK_CONTAINER_CLUSTER'